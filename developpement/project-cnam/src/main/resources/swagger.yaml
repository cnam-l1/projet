swagger: "2.0"
info:
  description: ""
  version: "1.0.1"
  title: "API Public"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "localhost:8080"
basePath: "/"
schemes:
- "http"
produces:
- "application/json;charset=utf-8"
tags:
- name: "User"
  description: "This endpoint allows to manage the user resource."
- name: "Ingredient"
  description: "This endpoint allows to manage the ingredient resource."
- name: "Shopping"
  description: "This endpoint allows to manage the shopping resource."
- name: "Recipe"
  description: "This endpoint allows to manage the recipe resource."
paths:
  /users:
    post:
      tags:
      - "User"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "userCreate"
      summary: "create a user"
      description: "This endpoint allows to create a user."
      deprecated: false
      parameters:
      - name: "User"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/User"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
  /users/{userId}:
    put:
      tags:
      - "User"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "userUpdate"
      summary: "Update a user."
      description: "This endpoint allows to update a user."
      deprecated: false
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "string"
        description: "User identifier."
      - name: "User"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
  /ingredients:
    post:
      tags:
      - "Ingredient"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "ingredientCreate"
      summary: "Create an ingredient"
      description: "This endpoint allows to create an ingredient."
      deprecated: false
      parameters:
      - name: "Ingredient"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Ingredient"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/Ingredient"
          headers:
            Location:
              description: "ingredient/{ingredientId}"
              type: "string"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Ingredient"
      produces:
      - "application/json;charset=utf-8"
      operationId: "ingredientFind"
      summary: "Find an ingredient"
      description: "This endpoint allows to get a list of ingredient."
      deprecated: false
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Ingredient"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
  /ingredients/{ingredientId}:
    get:
      tags:
      - "Ingredient"
      produces:
      - "application/json;charset=utf-8"
      operationId: "ingredientGet"
      summary: "Get an ingredient."
      description: "This endpoint allows to get an ingredient."
      deprecated: false
      parameters:
      - name: "ingredientId"
        in: "path"
        required: true
        type: "string"
        description: "ingredient identifier."
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Ingredient"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "Ingredient"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "ingredientUpdate"
      summary: "Update an ingredient."
      description: "This endpoint allows to update an ingredient."
      deprecated: false
      parameters:
      - name: "ingredientId"
        in: "path"
        required: true
        type: "string"
        description: "ingredient identifier."
      - name: "Ingredient"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Ingredient"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Ingredient"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    patch:
      tags:
      - "Ingredient"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "ingredientPatch"
      summary: "Update partially an ingredient."
      description: "This endpoint allows to partially update an ingredient."
      deprecated: false
      parameters:
      - name: "ingredientId"
        in: "path"
        required: true
        type: "string"
        description: "ingredient identifier."
      - name: "Ingredient"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Ingredient"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Ingredient"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Ingredient"
      operationId: "ingredientDelete"
      summary: "Delete an ingredient."
      description: "This endpoint allows to delete an ingredient."
      deprecated: false
      parameters:
      - name: "ingredientId"
        in: "path"
        required: true
        type: "string"
        description: "ingredient identifier."
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
  /shoppings:
    post:
      tags:
      - "Shopping"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "shoppingCreate"
      summary: "Create a Shopping List."
      description: ""
      deprecated: false
      parameters:
      - name: "Shopping"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Shopping"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/Shopping"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Shopping"
      produces:
      - "application/json;charset=utf-8"
      operationId: "shoppingFind"
      summary: "Find a shopping list"
      description: "This endpoint allows to get a list of shopping list."
      deprecated: false
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Shopping"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
  /shoppings/{shoppingId}:
    get:
      tags:
      - "Shopping"
      produces:
      - "application/json;charset=utf-8"
      operationId: "shoppingGet"
      summary: "Get a shopping list."
      description: "This endpoint allows to get a shopping list."
      deprecated: false
      parameters:
      - name: "shoppingId"
        in: "path"
        required: true
        type: "string"
        description: "Shopping identifier."
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Shopping"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Shopping"
      operationId: "shoppingDelete"
      summary: "Delete a shopping list."
      description: "This endpoint allows to delete a shopping list."
      deprecated: false
      parameters:
      - name: "shoppingId"
        in: "path"
        required: true
        type: "string"
        description: "Shopping identifier."
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
  /recipes:
    post:
      tags:
      - "Recipe"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "recipeCreate"
      summary: "Create a recipe"
      description: "This endpoint allows to create a recipe."
      deprecated: false
      parameters:
      - name: "Recipe"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Recipe"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/Recipe"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "Recipe"
      produces:
      - "application/json;charset=utf-8"
      operationId: "recipeFind"
      summary: "Find a recipe"
      description: "This endpoint allows to get a list of recipe."
      deprecated: false
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Recipe"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
  /recipes/{recipeId}:
    get:
      tags:
      - "Recipe"
      produces:
      - "application/json;charset=utf-8"
      operationId: "recipeGet"
      summary: "Get a recipe."
      description: "This endpoint allows to get a recipe."
      deprecated: false
      parameters:
      - name: "recipeId"
        in: "path"
        required: true
        type: "string"
        description: "Recipe identifier."
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Recipe"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "Recipe"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "recipeUpdate"
      summary: "Update a recipe."
      description: "This endpoint allows to update a recipe."
      deprecated: false
      parameters:
      - name: "recipeId"
        in: "path"
        required: true
        type: "string"
        description: "Recipe identifier."
      - name: "Recipe"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Recipe"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Recipe"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    patch:
      tags:
      - "Recipe"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "recipePatch"
      summary: "Update partially an ingredient."
      description: "This endpoint allows to partially update an ingredient."
      deprecated: false
      parameters:
      - name: "recipeId"
        in: "path"
        required: true
        type: "string"
        description: "Recipe identifier."
      - name: "Recipe"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Recipe"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Recipe"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "Recipe"
      operationId: "recipeDelete"
      summary: "Delete a recipe."
      description: "This endpoint allows to delete a recipe."
      deprecated: false
      parameters:
      - name: "recipeId"
        in: "path"
        required: true
        type: "string"
        description: "Recipe identifier."
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/Error"
definitions:
  MeasureUnit:
    description: "This enumeration list any unit of measure for an ingredient."
    type: "string"
    enum:
    - "gram"
    - "liter"
    - "piece"
  Category:
    description: "This enumeration represents the different categories of an ingredient."
    type: "string"
    enum:
    - "butchery"
    - "poultry"
    - "game"
    - "fish"
    - "dairy"
    - "vegetable"
    - "fresh_frozen"
    - "grocery"
    - "cellar"
  ErrorDetail:
    description: ""
    type: "object"
    properties: {}
  Error:
    description: ""
    required:
    - "code"
    - "message"
    type: "object"
    properties:
      code:
        description: ""
        type: "integer"
        format: "int32"
      message:
        description: ""
        type: "string"
  Ingredient:
    description: "This class represents a food ingredient."
    required:
    - "idIngredient"
    - "name"
    - "measureUnit"
    - "category"
    type: "object"
    properties:
      idIngredient:
        description: "Ingredient identifier."
        type: "string"
      name:
        description: "Ingredient name."
        type: "string"
      measureUnit:
        $ref: "#/definitions/MeasureUnit"
      category:
        $ref: "#/definitions/Category"
      quantity:
        description: ""
        type: "integer"
        format: "int32"
  User:
    description: "This class represents a user of <nom de l'application>."
    required:
    - "idUser"
    - "login"
    - "password"
    type: "object"
    properties:
      idUser:
        description: "User identifier."
        type: "string"
      login:
        description: "User name."
        type: "string"
      password:
        description: "User firstname."
        type: "string"
  Shopping:
    description: "This class represents a shopping list for a user."
    required:
    - "idShopping"
    - "date"
    - "ingredientList"
    type: "object"
    properties:
      idShopping:
        description: "Shopping identifier."
        type: "string"
      date:
        description: "Date the user generated the shopping list."
        type: "string"
        format: "date"
      ingredientList:
        type: "array"
        items:
          $ref: "#/definitions/Ingredient"
  Recipe:
    description: "This class represents a recipe from a user."
    required:
    - "idRecipe"
    - "name"
    - "nbPeople"
    - "ingredientList"
    type: "object"
    properties:
      idRecipe:
        description: "Recipient identifier."
        type: "string"
      name:
        description: "Recipient name."
        type: "string"
      nbPeople:
        description: "Number of people expected for the recipe."
        type: "integer"
        format: "int32"
      ingredientList:
        type: "array"
        items:
          $ref: "#/definitions/Ingredient"